class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def sortedArrayToBST(nums):
    if not nums:
        return None
    
    mid = len(nums) // 2  # Find the middle index
    root = TreeNode(nums[mid])  # Create a node with the middle element
    
    # Recursively build the left and right subtrees
    root.left = sortedArrayToBST(nums[:mid])  # Left half
    root.right = sortedArrayToBST(nums[mid + 1:])  # Right half
    
    return root
